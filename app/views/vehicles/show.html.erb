<div class="vehicle-container">
  <h1 class="vehicle-title"><%= @vehicle.name %></h1>

  <div class="vehicle-details">
    <p><strong>Vehicle Type:</strong> <%= @vehicle.vehicle_type %></p>
    <p><strong>Seating Capacity:</strong> <%= @vehicle.seating_capacity %> people</p>
    <p><strong>Price:</strong> <span class="vehicle-price">$<%= @vehicle.price %>/day</span></p>
  </div>

  <% if @vehicle.image.attached? %>
    <div class="vehicle-image-container">
      <%= image_tag @vehicle.image, class: "vehicle-image" %>
    </div>
  <% else %>
    <p class="no-image">No Image Uploaded</p>
  <% end %>

  <% if user_signed_in? %>
    <% if current_user.admin? %>
      <div class="admin-actions">
        <%= link_to "Edit", edit_vehicle_path(@vehicle), class: "btn btn-edit" %>
        <%= button_to "Delete", vehicle_path(@vehicle), method: :delete, data: { confirm: "Are you sure?" }, class: "btn btn-delete" %>
      </div>
    <% else %>
      <div class="booking-container">
        <h2 class="booking-title">Book This Vehicle:</h2>

       
   <%= form_with model: Booking.new, url: bookings_path, method: :post, html: { class: "booking-form" } do |f| %>
     <div class="form-group">
  <label>Start Date & Time</label>
  <%= f.datetime_local_field :start_date, required: true, class: "input-field", id: "start_date" %>
</div>

<div class="form-group">
     <label>End Date & Time</label>
     <%= f.datetime_local_field :end_date, required: true, class: "input-field", id: "end_date" %>
     </div>
     <div class="form-group">
     <%= f.label :address, "Address" %>
     <div class="address-container">
       <%= f.text_field :address, id: "address-input", placeholder: "Enter your address or use 'Add Location'", required: true, class: "input-field" %>
       <button type="button" id="openMap" class="btn btn-location">üìç Add Location</button>
     </div>
   </div>
          <div class="form-group">
  <%= f.label :phone_number, "Phone Number" %>
  <%= f.text_field :phone_number, required: true, class: "input-field", placeholder: "Enter your phone number" %>
</div>

          <div class="form-group">
            <label>Upload Proof Document (PDF/Image)</label>
            <%= f.file_field :proof_document, required: true, class: "input-field" %>
          </div>

          <%= f.hidden_field :vehicle_id, value: @vehicle.id %>

          <div class="form-group booking-submit">
            <%= f.submit "Proceed to Payment", class: "btn btn-submit" %>
          </div>
        <% end %>
      </div>
    <% end %>
  <% else %>
    <p class="login-warning"><strong>You must log in to book this vehicle.</strong></p>
  <% end %>
</div>


<!-- Map Modal -->
<div id="mapModal" class="modal">
  <div class="modal-content">
    <span id="closeModal" class="close">&times;</span>
    <h3>Select Location</h3>

    <!-- Search Box -->
    <div style="display: flex; gap: 10px;">
      <input type="text" id="search-box" class="input-field" placeholder="Search location..." />
      <button id="search-btn" class="btn btn-search">Search</button>
    </div>

    <div id="map" class="map-container"></div>
    <button id="confirmLocation" class="btn btn-confirm">Confirm Location</button>
  </div>
</div>

<!-- Leaflet JS -->
<link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
<script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
<script src="https://unpkg.com/leaflet-control-geocoder/dist/Control.Geocoder.js"></script>

<script>
document.addEventListener("DOMContentLoaded", function () {
  let map, marker, selectedAddress = "";
  
  // Open Map Modal
  document.getElementById("openMap").addEventListener("click", function () {
    document.getElementById("mapModal").style.display = "block";
    setTimeout(initMap, 200);
  });

  // Close Modal
  document.getElementById("closeModal").addEventListener("click", function () {
    document.getElementById("mapModal").style.display = "none";
  });

  // Initialize Map
  function initMap() {
    if (!map) {
      map = L.map("map").setView([20, 78], 5);
      L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
        attribution: "&copy; OpenStreetMap contributors",
      }).addTo(map);

      map.on("click", function (e) {
        placeMarker(e.latlng.lat, e.latlng.lng);
      });
    }
  }

  // Place Marker and Fetch Address
  function placeMarker(lat, lng) {
    if (marker) {
      marker.setLatLng([lat, lng]);
    } else {
      marker = L.marker([lat, lng]).addTo(map);
    }
    map.setView([lat, lng], 12);

    fetchAddress(lat, lng);
  }

  // Fetch Address from OpenStreetMap API
  function fetchAddress(lat, lng) {
    fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lng}`)
      .then(response => response.json())
      .then(data => {
        if (data && data.display_name) {
          selectedAddress = data.display_name;
          document.getElementById("address-input").value = selectedAddress;
        } else {
          alert("Unable to retrieve address. Please try another location.");
        }
      })
      .catch(error => {
        console.error("Error fetching address:", error);
        alert("Error fetching location details. Try again.");
      });
  }

  // Confirm Location
  document.getElementById("confirmLocation").addEventListener("click", function () {
    if (selectedAddress) {
      document.getElementById("address-input").value = selectedAddress;
      document.getElementById("mapModal").style.display = "none";
    } else {
      alert("Please select a location on the map before confirming.");
    }
  });
});
</script>


<script>
document.addEventListener("DOMContentLoaded", function () {
  let today = new Date();
  let minDateTime = today.toISOString().slice(0, 16); // Format YYYY-MM-DDTHH:MM

  let startDateInput = document.getElementById("start_date");
  let endDateInput = document.getElementById("end_date");

  if (startDateInput && endDateInput) {
    startDateInput.min = minDateTime;
    endDateInput.min = minDateTime;

    // Ensure End Date is after Start Date
    startDateInput.addEventListener("change", function () {
      endDateInput.min = this.value;
    });
  }
});

</script>

<style>
.vehicle-container {
  max-width: 900px;
  margin: auto;
  padding: 20px;
  background-color: rgba(0, 0, 0, 0.8); /* Black with 60% opacity */
  border-radius: 10px;
  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
  height: 700px;
  width: 1000px
  
}

.vehicle-title {
  text-align: center;
  font-size: 24px;
  font-weight: bold;
  color: yellow;
  margin-left: 10px;
}

.vehicle-details p {
  font-size: 16px;
  margin: 5px 0;
  color: white;
  margin-left: 120px;

}

.vehicle-image-container {
  text-align: center;
}

.vehicle-image {
  max-width: 100%;
  height: auto;
  border-radius: 8px;
}

.input-field {
  width: 100%;
  padding: 10px;
  margin: 5px 0;
  border: 1px solid #ccc;
  border-radius: 5px;
}

.btn {
  padding: 10px 15px;
  border: none;
  cursor: pointer;
  font-size: 14px;
  border-radius: 5px;
}

.btn-location {
  background-color: #007bff;
  color: white;
  margin-left: 5px;
}

.btn-submit {
  background-color: #28a745;
  color: white;
  width: 100%;
  margin-top: 10px;
}

.modal {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5);
}

.modal-content {
  background-color: white;
  margin: 10% auto;
  padding: 20px;
  width: 80%;
  text-align: center;
  border-radius: 8px;
}

.map-container {
  width: 100%;
  height: 400px;
  border-radius: 8px;
}
</style>
